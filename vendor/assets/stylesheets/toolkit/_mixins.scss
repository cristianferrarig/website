@mixin expose-map($map) {
  @each $property, $value in $map  {
    #{$property}: $value;
  }
}

$oposite-directions: (
  top:    bottom,
  right:  left,
  bottom: top,
  left:   right
);

@function oposite($direction) {
  @return map-get($oposite-directions, $direction);
}

// IMAGE
@mixin retina-bg($image, $size:2, $type:"png") {
  // added $size as variable on the image, changed the function
  // according to this article
  // http://css-tricks.com/snippets/css/retina-display-media-query/
  $image_1x: $image + "." + $type;
  $image_2x: $image + "@2x." + $type;
  $width:    image-width($image_1x);
  $height:   image-height($image_1x);
  background-image: image-url($image_1x);
  background-repeat: no-repeat;
  @media (-webkit-min-device-pixel-ratio: $size), (min-resolution: #{96 * $size}dpi) {
    background-image: image-url($image_2x);
    background-size: $width $height;
  }
}
// TODO: Mejorar mixin background-image-retina()
/*
@mixin background-image-retina($image,$type:"png") {
  $image_1x: $image + "." + $type;
  $image_2x: $image + "@2x." + $type;
  $width:    image-width($image_1x);
  $height:   image-height($image_1x);

  background-image: image-url($image_1x);
  @media screen #{resolution(2)} {
    background-image: image-url($image_2x);
    background-size: $width $height;
  }
}
*/

@mixin fit-image($image, $extension, $margin:false) {
  $_margin:   null;
  $_image_1x: $image + "." + $extension;
  $_image_2x: $image + "@2x" + $extension;

  @if ($margin == center or $margin == auto) {
    $_margin: 0 auto;
  }
  @else if (type-of($margin) == number) or (type-of($margin) == list) {
    $_margin: $margin;
  }
  @include retina-bg($image);
  width: image-width($_image_1x);
  height: image-height($_image_1x);
  margin: $_margin;
}

@function solidify($alpha-color, $background-color: white) {
  $percent: alpha($alpha-color) * 100%;
  $opaque: opacify($alpha-color, 1);
  $solid-color: mix($opaque, $background-color, $percent);
  @return $solid-color;
}

@mixin alpha-attr($attribute, $alpha-color, $background-color: white) {
  #{$attribute}: solidify($alpha-color, $background-color);
  #{$attribute}: $alpha-color;
}
